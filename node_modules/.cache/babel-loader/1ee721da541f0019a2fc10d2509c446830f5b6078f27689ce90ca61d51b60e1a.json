{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { auth, firestore, firebase } from \"../firebase\";\nimport ToggleGrid from \"@/components/ToggleGrid\";\nimport getCoordinates from \"../utils/locationGeoLocation\";\nexport default {\n  name: \"register\",\n  components: {\n    ToggleGrid\n  },\n  data() {\n    return {\n      name: null,\n      email: null,\n      emailError: \"\",\n      password: null,\n      loading: false,\n      selectedGender: null,\n      selectedSport: null,\n      zipCode: \"\",\n      zipCodeError: \"\",\n      genderOptions: [{\n        label: \"Male\",\n        value: \"M\"\n      }, {\n        label: \"Female\",\n        value: \"F\"\n      }],\n      sportOptions: [{\n        label: \"Tennis\",\n        value: \"Tennis\"\n      }, {\n        label: \"Pickleball\",\n        value: \"Pickleball\"\n      }]\n    };\n  },\n  computed: {\n    submitDisabled() {\n      return this.loading || !this.name || !this.email || !this.password || !this.zipCode || !this.selectedSport;\n    }\n  },\n  methods: {\n    handleSelectGender(gender) {\n      this.selectedGender = gender;\n    },\n    handleSelectSport(sport) {\n      this.selectedSport = sport;\n    },\n    async submit() {\n      this.loading = true;\n      const cordinates = await getCoordinates(this.zipCode);\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.email)) {\n        this.emailError = \"Invalid email address\";\n        this.loading = false;\n        return;\n      }\n      this.emailError = \"\";\n      if (!cordinates) {\n        this.zipCodeError = \"Invalid ZIP code format.\";\n        this.loading = false;\n        return;\n      }\n      this.zipCodeError = \"\";\n      try {\n        const userCredential = await auth.createUserWithEmailAndPassword(this.email, this.password);\n        const user = userCredential.user;\n        await firestore.collection(\"users\").doc(user.uid).set({\n          name: this.name,\n          email: this.email,\n          gender: this.selectedGender,\n          zipCode: this.zipCode,\n          sport: this.selectedSport,\n          address: cordinates.address,\n          lng: cordinates.lng,\n          lat: cordinates.lat,\n          createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        });\n        this.loading = false;\n        this.$router.push({\n          name: \"home\"\n        });\n      } catch (error) {\n        alert(error.message);\n        this.loading = false;\n      }\n    },\n    handleLogin() {\n      this.$router.push({\n        name: \"login\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["auth","firestore","firebase","ToggleGrid","getCoordinates","name","components","data","email","emailError","password","loading","selectedGender","selectedSport","zipCode","zipCodeError","genderOptions","label","value","sportOptions","computed","submitDisabled","methods","handleSelectGender","gender","handleSelectSport","sport","submit","cordinates","test","userCredential","createUserWithEmailAndPassword","user","collection","doc","uid","set","address","lng","lat","createdAt","FieldValue","serverTimestamp","$router","push","error","alert","message","handleLogin"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <div class=\"form\">\r\n      <div class=\"input-line\">\r\n        <label>Name</label>\r\n        <input type=\"text\" placeholder=\"Name\" v-model=\"name\" />\r\n      </div>\r\n      <div class=\"input-line\">\r\n        <label>Email</label>\r\n        <input type=\"email\" placeholder=\"Email\" v-model=\"email\" />\r\n        <div v-if=\"emailError\"></div>\r\n        <span v-if=\"emailError\" style=\"color: red; font-size: 15px\">{{\r\n          emailError\r\n        }}</span>\r\n      </div>\r\n      <div class=\"input-line\">\r\n        <label>Password</label>\r\n        <input type=\"password\" placeholder=\"Password\" v-model=\"password\" />\r\n      </div>\r\n\r\n      <div class=\"input-line\">\r\n        <label>Sport</label>\r\n        <ToggleGrid\r\n          :options=\"sportOptions\"\r\n          :selectedOption=\"selectedSport\"\r\n          @selected=\"(opt) => handleSelectSport(opt)\"\r\n        />\r\n      </div>\r\n      <div class=\"input-line\">\r\n        <label>Zip code</label>\r\n        <input\r\n          v-model=\"zipCode\"\r\n          name=\"zipCode\"\r\n          type=\"text\"\r\n          placeholder=\"Enter ZIP code\"\r\n        />\r\n        <div v-if=\"zipCodeError\"></div>\r\n        <span v-if=\"zipCodeError\" style=\"color: red; font-size: 15px\">{{\r\n          zipCodeError\r\n        }}</span>\r\n      </div>\r\n    </div>\r\n    <div class=\"action\">\r\n      <button :disabled=\"submitDisabled\" @click=\"submit\">\r\n        <moon-loader v-if=\"loading\" color=\"white\" size=\"13px\" />\r\n        <span v-else>Create</span>\r\n      </button>\r\n      <div class=\"or\">or</div>\r\n      <button @click=\"handleLogin\">Log in to Existing Account</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { auth, firestore, firebase } from \"../firebase\";\r\nimport ToggleGrid from \"@/components/ToggleGrid\";\r\nimport getCoordinates from \"../utils/locationGeoLocation\";\r\n\r\nexport default {\r\n  name: \"register\",\r\n  components: { ToggleGrid },\r\n\r\n  data() {\r\n    return {\r\n      name: null,\r\n      email: null,\r\n      emailError: \"\",\r\n      password: null,\r\n      loading: false,\r\n      selectedGender: null,\r\n      selectedSport: null,\r\n\r\n      zipCode: \"\",\r\n      zipCodeError: \"\",\r\n      genderOptions: [\r\n        { label: \"Male\", value: \"M\" },\r\n        { label: \"Female\", value: \"F\" },\r\n      ],\r\n      sportOptions: [\r\n        { label: \"Tennis\", value: \"Tennis\" },\r\n        { label: \"Pickleball\", value: \"Pickleball\" },\r\n      ],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    submitDisabled() {\r\n      return (\r\n        this.loading ||\r\n        !this.name ||\r\n        !this.email ||\r\n        !this.password ||\r\n        !this.zipCode ||\r\n        !this.selectedSport\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    handleSelectGender(gender) {\r\n      this.selectedGender = gender;\r\n    },\r\n    handleSelectSport(sport) {\r\n      this.selectedSport = sport;\r\n    },\r\n    async submit() {\r\n      this.loading = true;\r\n\r\n      const cordinates = await getCoordinates(this.zipCode);\r\n\r\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(this.email)) {\r\n        this.emailError = \"Invalid email address\";\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      this.emailError = \"\";\r\n      if (!cordinates) {\r\n        this.zipCodeError = \"Invalid ZIP code format.\";\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      this.zipCodeError = \"\";\r\n\r\n      try {\r\n        const userCredential = await auth.createUserWithEmailAndPassword(\r\n          this.email,\r\n          this.password\r\n        );\r\n        const user = userCredential.user;\r\n        await firestore.collection(\"users\").doc(user.uid).set({\r\n          name: this.name,\r\n          email: this.email,\r\n          gender: this.selectedGender,\r\n          zipCode: this.zipCode,\r\n          sport: this.selectedSport,\r\n          address: cordinates.address,\r\n          lng: cordinates.lng,\r\n          lat: cordinates.lat,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        });\r\n\r\n        this.loading = false;\r\n        this.$router.push({\r\n          name: \"home\",\r\n        });\r\n      } catch (error) {\r\n        alert(error.message);\r\n        this.loading = false;\r\n      }\r\n    },\r\n    handleLogin() {\r\n      this.$router.push({\r\n        name: \"login\",\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"src/scss/login.scss\";\r\n</style>\r\n"],"mappings":";AAsDA,SAAAA,IAAA,EAAAC,SAAA,EAAAC,QAAA;AACA,OAAAC,UAAA;AACA,OAAAC,cAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH;EAAA;EAEAI,KAAA;IACA;MACAF,IAAA;MACAG,KAAA;MACAC,UAAA;MACAC,QAAA;MACAC,OAAA;MACAC,cAAA;MACAC,aAAA;MAEAC,OAAA;MACAC,YAAA;MACAC,aAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,EACA;MACAC,YAAA,GACA;QAAAF,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EAEAE,QAAA;IACAC,eAAA;MACA,OACA,KAAAV,OAAA,IACA,MAAAN,IAAA,IACA,MAAAG,KAAA,IACA,MAAAE,QAAA,IACA,MAAAI,OAAA,IACA,MAAAD,aAAA;IAEA;EACA;EACAS,OAAA;IACAC,mBAAAC,MAAA;MACA,KAAAZ,cAAA,GAAAY,MAAA;IACA;IACAC,kBAAAC,KAAA;MACA,KAAAb,aAAA,GAAAa,KAAA;IACA;IACA,MAAAC,OAAA;MACA,KAAAhB,OAAA;MAEA,MAAAiB,UAAA,SAAAxB,cAAA,MAAAU,OAAA;MAEA,kCAAAe,IAAA,MAAArB,KAAA;QACA,KAAAC,UAAA;QACA,KAAAE,OAAA;QACA;MACA;MACA,KAAAF,UAAA;MACA,KAAAmB,UAAA;QACA,KAAAb,YAAA;QACA,KAAAJ,OAAA;QACA;MACA;MACA,KAAAI,YAAA;MAEA;QACA,MAAAe,cAAA,SAAA9B,IAAA,CAAA+B,8BAAA,CACA,KAAAvB,KAAA,EACA,KAAAE,QACA;QACA,MAAAsB,IAAA,GAAAF,cAAA,CAAAE,IAAA;QACA,MAAA/B,SAAA,CAAAgC,UAAA,UAAAC,GAAA,CAAAF,IAAA,CAAAG,GAAA,EAAAC,GAAA;UACA/B,IAAA,OAAAA,IAAA;UACAG,KAAA,OAAAA,KAAA;UACAgB,MAAA,OAAAZ,cAAA;UACAE,OAAA,OAAAA,OAAA;UACAY,KAAA,OAAAb,aAAA;UACAwB,OAAA,EAAAT,UAAA,CAAAS,OAAA;UACAC,GAAA,EAAAV,UAAA,CAAAU,GAAA;UACAC,GAAA,EAAAX,UAAA,CAAAW,GAAA;UACAC,SAAA,EAAAtC,QAAA,CAAAD,SAAA,CAAAwC,UAAA,CAAAC,eAAA;QACA;QAEA,KAAA/B,OAAA;QACA,KAAAgC,OAAA,CAAAC,IAAA;UACAvC,IAAA;QACA;MACA,SAAAwC,KAAA;QACAC,KAAA,CAAAD,KAAA,CAAAE,OAAA;QACA,KAAApC,OAAA;MACA;IACA;IACAqC,YAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;QACAvC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}