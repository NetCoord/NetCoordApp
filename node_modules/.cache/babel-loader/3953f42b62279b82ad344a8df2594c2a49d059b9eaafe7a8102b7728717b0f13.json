{"ast":null,"code":"import { mapState } from 'vuex';\nexport default {\n  props: ['clickedNext', 'currentStep'],\n  components: {},\n  data() {\n    return {\n      activeCourtWithNumber: [],\n      rosters: [],\n      repopulateExisting: false\n    };\n  },\n  computed: {\n    ...mapState('court', ['courts', 'formCreateEvent']),\n    existingPlayers() {\n      if (this.repopulateExisting) {\n        this.repopulateExisting = false;\n      }\n      if (!this.activeCourtWithNumber.length) {\n        return [];\n      }\n      const courtId = this.activeCourtWithNumber[0];\n      const courtNum = this.activeCourtWithNumber[1];\n      return this.formCreateEvent.selectedCourtNumbers[courtId][courtNum];\n    }\n  },\n  mounted() {\n    this.$emit('can-continue', {\n      value: true\n    });\n  }\n};","map":{"version":3,"names":["mapState","props","components","data","activeCourtWithNumber","rosters","repopulateExisting","computed","existingPlayers","length","courtId","courtNum","formCreateEvent","selectedCourtNumbers","mounted","$emit","value"],"sources":["src/components/events/StepReview.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"review-grid\">\n      <h3>Event Type</h3>\n      <span>{{ `${formCreateEvent.selectedGender}'s ${formCreateEvent.selectedSport}` }}</span>\n      <h3>Start</h3>\n      <span>{{ formCreateEvent.startDate | displayDate }} {{ formCreateEvent.startTime | displayDate('hh:mm A') }}</span>\n      <h3>End</h3>\n      <span>{{ formCreateEvent.endDate | displayDate }} {{ formCreateEvent.endTime | displayDate('hh:mm A') }}</span>\n      <h3>Park(s)</h3>\n      <span>{{ formCreateEvent.selectedCourts.map(c => c.name).join(', ') }}</span>\n    </div>\n    <div\n      v-for=\"selectedCourt in formCreateEvent.selectedCourts\"\n      :key=\"selectedCourt.id\"\n      class=\"court-detail\"\n    >\n      <h4>{{ selectedCourt.name }}</h4>\n      <div\n        v-for=\"courtNum in Object.keys(formCreateEvent.selectedCourtNumbers[selectedCourt.id])\"\n        :key=\"courtNum\"\n        class=\"court-detail-player-grid\"\n      >\n        <template v-for=\"player in formCreateEvent.selectedCourtNumbers[selectedCourt.id][courtNum]\">\n          <p :key=\"`name-${player.id}`\">{{ player.name }}</p>\n          <span :key=\"`court name-${player.id}`\">Court {{ courtNum }}</span>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n  props: ['clickedNext', 'currentStep'],\n  components: { },\n  data () {\n    return {\n      activeCourtWithNumber: [],\n      rosters: [],\n      repopulateExisting: false\n    }\n  },\n  computed: {\n    ...mapState('court', ['courts', 'formCreateEvent']),\n    existingPlayers () {\n      if (this.repopulateExisting) {\n        this.repopulateExisting = false\n      }\n      if (!this.activeCourtWithNumber.length) {\n        return []\n      }\n\n      const courtId = this.activeCourtWithNumber[0]\n      const courtNum = this.activeCourtWithNumber[1]\n      return this.formCreateEvent.selectedCourtNumbers[courtId][courtNum]\n    }\n  },\n  mounted () {\n    this.$emit('can-continue', {value: true});\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../scss/variable\";\n\n.review-grid {\n  display: grid;\n  grid-template-columns: 130px 1fr;\n  align-items: center;\n  grid-gap: 1rem;\n\n  h3 {\n    font-size: 1.3em;\n    font-weight: 600;\n    color: $primary;\n  }\n}\n.court-detail {\n  margin-top: 1rem;\n\n  h4 {\n    color: $primary;\n    text-align: center;\n    font-size: 1.3em;\n    margin-bottom: 1rem;\n  }\n}\n.court-detail-player-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 1rem;\n  align-items: center;\n  margin-bottom: 0.8rem;\n}\n</style>\n"],"mappings":"AAiCA,SAAAA,QAAA;AAEA;EACAC,KAAA;EACAC,UAAA;EACAC,KAAA;IACA;MACAC,qBAAA;MACAC,OAAA;MACAC,kBAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAP,QAAA;IACAQ,gBAAA;MACA,SAAAF,kBAAA;QACA,KAAAA,kBAAA;MACA;MACA,UAAAF,qBAAA,CAAAK,MAAA;QACA;MACA;MAEA,MAAAC,OAAA,QAAAN,qBAAA;MACA,MAAAO,QAAA,QAAAP,qBAAA;MACA,YAAAQ,eAAA,CAAAC,oBAAA,CAAAH,OAAA,EAAAC,QAAA;IACA;EACA;EACAG,QAAA;IACA,KAAAC,KAAA;MAAAC,KAAA;IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}