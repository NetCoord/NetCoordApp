{"ast":null,"code":"import { mapState, mapGetters } from 'vuex';\nimport moment from 'moment';\nexport default {\n  name: \"MyEventsList\",\n  data() {\n    return {\n      loading: false,\n      events: []\n    };\n  },\n  mounted() {\n    this.fetchMyEvents();\n  },\n  computed: {\n    ...mapState('court', ['courts']),\n    ...mapGetters({\n      courtIdToName: 'court/courtIdToName'\n    })\n  },\n  methods: {\n    async fetchMyEvents() {\n      this.loading = true;\n      const events = await this.$store.dispatch('court/fetchMyEvents');\n      this.events = events;\n      this.loading = false;\n    },\n    getCourtNames(event) {\n      return Object.keys(event.courtDetails).map(id => this.courtIdToName[id]).filter(name => name).join(', ');\n    }\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","moment","name","data","loading","events","mounted","fetchMyEvents","computed","courtIdToName","methods","$store","dispatch","getCourtNames","event","Object","keys","courtDetails","map","id","filter","join"],"sources":["src/components/MyEventsList.vue"],"sourcesContent":["<template>\n  <div class=\"events-list\">\n    <div class=\"events-list_row events-list_header\">\n      <span>Park</span>\n      <span>Event Name</span>\n      <span>Sport</span>\n      <span>When</span>\n    </div>\n    <moon-loader v-if=\"loading\" color=\"white\" class=\"fixed-center\" />\n    <template v-else>\n      <div v-if=\"!events.length\" class=\"events-list_empty\">\n        No events available\n      </div>\n      <div v-else>\n        <div v-for=\"(event, idx) in events\" :key=\"idx\" class=\"events-list_row\">\n          <span>{{ getCourtNames(event) }}</span>\n          <span>{{ event.name }}</span>\n          <span class=\"highlight\">{{ event.sport | displayShortSport }}</span>\n          <span>{{ event.startTime.toDate() | displayDate('hh:mm A') }}</span>\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex';\nimport moment from 'moment';\n\nexport default {\n  name: \"MyEventsList\",\n  data () {\n    return {\n      loading: false,\n      events: []\n    }\n  },\n  mounted () {\n    this.fetchMyEvents()\n  },\n  computed: {\n    ...mapState('court', ['courts']),\n    ...mapGetters({\n      courtIdToName: 'court/courtIdToName',\n    })\n  },\n  methods: {\n    async fetchMyEvents() {\n      this.loading = true\n      const events = await this.$store.dispatch('court/fetchMyEvents')\n      this.events = events;\n      this.loading = false\n    },\n    getCourtNames (event) {\n      return Object.keys(event.courtDetails)\n        .map(id => this.courtIdToName[id])\n        .filter(name => name)\n        .join(', ')\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../scss/variable\";\n\n.events-list {\n  padding: 0.4rem;\n\n  &_row {\n    display: grid;\n    grid-template-columns: 100px 1fr 40px 46px;\n    grid-gap: 8px;\n    gap: 8px;\n    border-bottom: 1px solid $primary;\n    padding: 8px 0px;\n\n    span {\n      overflow: hidden;\n      white-space: pre-line;\n      text-overflow: ellipsis;\n\n      &.highlight {\n        color: $primary;\n      }\n      &:nth-of-type(3) {\n        text-align: center;\n      }\n      &:nth-of-type(4) {\n        text-align: right;\n      }\n    }\n  }\n  &_header {\n    color: $primary;\n    font-weight: 500;\n  }\n  &_empty {\n    margin-top: 8px;\n    text-align: center;\n  }\n  &_separator {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: $primary;\n    padding: 2px;\n  }\n}\n</style>"],"mappings":"AA0BA,SAAAA,QAAA,EAAAC,UAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,QAAA;IACA,GAAAT,QAAA;IACA,GAAAC,UAAA;MACAS,aAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAH,cAAA;MACA,KAAAH,OAAA;MACA,MAAAC,MAAA,cAAAM,MAAA,CAAAC,QAAA;MACA,KAAAP,MAAA,GAAAA,MAAA;MACA,KAAAD,OAAA;IACA;IACAS,cAAAC,KAAA;MACA,OAAAC,MAAA,CAAAC,IAAA,CAAAF,KAAA,CAAAG,YAAA,EACAC,GAAA,CAAAC,EAAA,SAAAV,aAAA,CAAAU,EAAA,GACAC,MAAA,CAAAlB,IAAA,IAAAA,IAAA,EACAmB,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}