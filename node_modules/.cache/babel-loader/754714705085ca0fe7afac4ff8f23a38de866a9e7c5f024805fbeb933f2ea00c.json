{"ast":null,"code":"// Storing in variable a context with all files in this folder\n// ending with `.js`.\nconst requireModule = require.context('.', false, /\\.js$/);\nconst modules = {};\nrequireModule.keys().forEach(fileName => {\n  if (fileName === './index.js') return;\n  const camelize = str => {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase();\n    }).replace(/\\s+/g, '');\n  };\n\n  // filter fullstops and extension\n  // and return a camel-case name for the file\n  const moduleName = camelize(fileName.replace(/(\\.\\/|\\.js)/g, ''));\n\n  // create a dynamic object with all modules\n  modules[moduleName] = {\n    // add namespace here\n    namespaced: true,\n    ...requireModule(fileName).default\n    // if you have exported the object with name in the module `js` file\n    // e.g., export const name = {};\n    // uncomment this line and comment the above\n    // ...requireModule(fileName)[moduleName]\n  };\n});\n\nexport default modules;","map":{"version":3,"names":["requireModule","require","context","modules","keys","forEach","fileName","camelize","str","replace","word","index","toLowerCase","toUpperCase","moduleName","namespaced","default"],"sources":["/Users/sharpie/Desktop/NetCoord Code/Testing/Latest code update/src/store/modules/index.js"],"sourcesContent":["// Storing in variable a context with all files in this folder\n// ending with `.js`.\nconst requireModule = require.context('.', false, /\\.js$/)\nconst modules = {}\n\nrequireModule.keys().forEach(fileName => {\n  if (fileName === './index.js') return\n\n  const camelize = (str) => {\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (word, index) => {\n      return index === 0 ? word.toLowerCase() : word.toUpperCase()\n    }).replace(/\\s+/g, '')\n  }\n\n  // filter fullstops and extension\n  // and return a camel-case name for the file\n  const moduleName = camelize(fileName.replace(/(\\.\\/|\\.js)/g, ''))\n\n  // create a dynamic object with all modules\n  modules[moduleName] = {\n    // add namespace here\n    namespaced: true,\n    ...requireModule(fileName).default\n    // if you have exported the object with name in the module `js` file\n    // e.g., export const name = {};\n    // uncomment this line and comment the above\n    // ...requireModule(fileName)[moduleName]\n  }\n})\n\nexport default modules\n"],"mappings":"AAAA;AACA;AACA,MAAMA,aAAa,GAAGC,OAAO,CAACC,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,CAAC;AAC1D,MAAMC,OAAO,GAAG,CAAC,CAAC;AAElBH,aAAa,CAACI,IAAI,CAAC,CAAC,CAACC,OAAO,CAACC,QAAQ,IAAI;EACvC,IAAIA,QAAQ,KAAK,YAAY,EAAE;EAE/B,MAAMC,QAAQ,GAAIC,GAAG,IAAK;IACxB,OAAOA,GAAG,CAACC,OAAO,CAAC,qBAAqB,EAAE,CAACC,IAAI,EAAEC,KAAK,KAAK;MACzD,OAAOA,KAAK,KAAK,CAAC,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC;IAC9D,CAAC,CAAC,CAACJ,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EACxB,CAAC;;EAED;EACA;EACA,MAAMK,UAAU,GAAGP,QAAQ,CAACD,QAAQ,CAACG,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;;EAEjE;EACAN,OAAO,CAACW,UAAU,CAAC,GAAG;IACpB;IACAC,UAAU,EAAE,IAAI;IAChB,GAAGf,aAAa,CAACM,QAAQ,CAAC,CAACU;IAC3B;IACA;IACA;IACA;EACF,CAAC;AACH,CAAC,CAAC;;AAEF,eAAeb,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}