{"ast":null,"code":"import moment from 'moment';\nimport CourtAvailabilityTimeChart from './CourtAvailabilityTimeChart';\nexport default {\n  name: 'court-schedule-view',\n  components: {\n    CourtAvailabilityTimeChart\n  },\n  props: {\n    court: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedCourtNum: null,\n      loading: false,\n      events: []\n    };\n  },\n  computed: {\n    courtOptions() {\n      return [...Array(this.court.courtNum).keys()].map(i => ({\n        label: `Court ${i + 1}`,\n        value: i + 1,\n        name: i + 1\n      }));\n    }\n  },\n  watch: {\n    selectedCourtNum(val) {\n      if (val) {\n        // this.fetchEvents()\n      }\n    }\n  },\n  methods: {\n    async fetchEvents() {\n      const params = {\n        courtId: this.court.id,\n        courtNum: this.selectedCourtNum\n      };\n      this.loading = true;\n      const events = await this.$store.dispatch('court/fetchEvents', params);\n      const today = moment();\n      const todayEvents = events.filter(({\n        startTime,\n        endTime\n      }) => today.isBetween(startTime.toDate(), endTime.toDate()));\n      this.events = todayEvents;\n      this.loading = false;\n    }\n  }\n};","map":{"version":3,"names":["moment","CourtAvailabilityTimeChart","name","components","props","court","type","Object","required","data","selectedCourtNum","loading","events","computed","courtOptions","Array","courtNum","keys","map","i","label","value","watch","val","methods","fetchEvents","params","courtId","id","$store","dispatch","today","todayEvents","filter","startTime","endTime","isBetween","toDate"],"sources":["src/components/CourtScheduleView.vue"],"sourcesContent":["<template>\n  <div>\n    <div>\n      <h2>Availability</h2>\n      <div class=\"select-wrapper\">\n        <v-select\n          :options=\"courtOptions\"\n          placeholder=\"Select Court\"\n          v-model=\"selectedCourtNum\"\n          :reduce=\"opt => opt.value\"\n        />\n      </div>\n      <div v-if=\"selectedCourtNum\">\n        <court-availability-time-chart :court=\"court\" :courtNum=\"selectedCourtNum\" />\n        <!-- <h2>Events</h2>\n        <moon-loader v-if=\"loading\" color=\"white\" class=\"fixed-center\" />\n        <template v-else>\n          <div v-if=\"!events.length\" class=\"text-center\">\n            No events scheduled for today\n          </div>\n          <div v-else>\n            <div v-for=\"(event, idx) in events\" :key=\"idx\" class=\"event-item\">\n              <h3>{{ event.name }}</h3>\n              <p>{{ event.gender }} {{ event.sport }}</p>\n              <p>Starts at: {{ event.startTime.toDate() | displayDate('ddd DD MMM hh:mm A') }}</p>\n              <p>Ends at: {{ event.endTime.toDate() | displayDate('ddd DD MMM hh:mm A') }}</p>\n            </div>\n          </div>\n        </template> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nimport CourtAvailabilityTimeChart from './CourtAvailabilityTimeChart';\n\nexport default {\n  name: 'court-schedule-view',\n  components: { CourtAvailabilityTimeChart },\n  props: {\n    court: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedCourtNum: null,\n      loading: false,\n      events: []\n    };\n  },\n  computed: {\n    courtOptions () {\n      return [...Array(this.court.courtNum).keys()] \n        .map(i => ({ label: `Court ${i+1}`, value: i+1, name: i+1 }))\n    }\n  },\n  watch: {\n    selectedCourtNum (val) {\n      if (val) {\n        // this.fetchEvents()\n      }\n    }\n  },\n  methods: {\n    async fetchEvents() {\n      const params = {\n        courtId: this.court.id,\n        courtNum: this.selectedCourtNum\n      }\n      this.loading = true\n      const events = await this.$store.dispatch('court/fetchEvents', params)\n\n      const today = moment()\n      const todayEvents = events.filter(({ startTime, endTime }) =>\n        today.isBetween(startTime.toDate(), endTime.toDate())\n      )\n      this.events = todayEvents;\n\n      this.loading = false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../scss/variable\";\n\nh2 {\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-top: 24px;\n  margin-bottom: 18px;\n  text-align: center;\n  line-height: 1.3;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.event-item {\n  border-bottom: 1px solid $primary;\n  padding-bottom: 8px;\n\n  h3 {\n    text-transform: capitalize;\n  }\n}\n</style>\n"],"mappings":"AAmCA,OAAAA,MAAA;AACA,OAAAC,0BAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,gBAAA;MACAC,OAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA,WAAAC,KAAA,MAAAV,KAAA,CAAAW,QAAA,EAAAC,IAAA,IACAC,GAAA,CAAAC,CAAA;QAAAC,KAAA,WAAAD,CAAA;QAAAE,KAAA,EAAAF,CAAA;QAAAjB,IAAA,EAAAiB,CAAA;MAAA;IACA;EACA;EACAG,KAAA;IACAZ,iBAAAa,GAAA;MACA,IAAAA,GAAA;QACA;MAAA;IAEA;EACA;EACAC,OAAA;IACA,MAAAC,YAAA;MACA,MAAAC,MAAA;QACAC,OAAA,OAAAtB,KAAA,CAAAuB,EAAA;QACAZ,QAAA,OAAAN;MACA;MACA,KAAAC,OAAA;MACA,MAAAC,MAAA,cAAAiB,MAAA,CAAAC,QAAA,sBAAAJ,MAAA;MAEA,MAAAK,KAAA,GAAA/B,MAAA;MACA,MAAAgC,WAAA,GAAApB,MAAA,CAAAqB,MAAA;QAAAC,SAAA;QAAAC;MAAA,MACAJ,KAAA,CAAAK,SAAA,CAAAF,SAAA,CAAAG,MAAA,IAAAF,OAAA,CAAAE,MAAA,GACA;MACA,KAAAzB,MAAA,GAAAoB,WAAA;MAEA,KAAArB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}